import pandas as pd
from exporters.base_exporter import BaseSheetExporter

class HeadingsVaziosSheet(BaseSheetExporter):
    def export(self):
        """üï≥Ô∏è Gera aba DETALHADA de headings vazios com contexto do elemento pai"""
        try:
            rows = []
            
            for _, row in self.df.iterrows():
                url = row.get('url', '')
                
                # üéØ USA DADOS COM CONTEXTO do validador_headings.py
                if 'headings_problematicos' in row and isinstance(row['headings_problematicos'], list):
                    problemas_list = row['headings_problematicos']
                    
                    for problema in problemas_list:
                        if isinstance(problema, dict):
                            motivos = problema.get('motivos', [])
                            
                            # Filtra apenas headings vazios
                            if any('vazio' in str(motivo).lower() or 'empty' in str(motivo).lower() for motivo in motivos):
                                rows.append({
                                    'üîó URL': url,
                                    'Tag': problema.get('tag', '').upper(),
                                    'Elemento_Pai': problema.get('contexto_pai', 'N√£o informado'),
                                    'Contexto_Completo': problema.get('contexto_expandido', problema.get('contexto_pai', 'N√£o informado')),
                                    'Atributos_Heading': problema.get('atributos_heading', 'sem atributos'),
                                    '‚öñÔ∏è Gravidade': problema.get('gravidade', 'M√âDIO'),
                                    'Descri√ß√£o': problema.get('descricao_completa', problema.get('descricao', '')),
                                    'Posi√ß√£o': problema.get('posicao', 0),
                                    'üéØ Score_P√°gina': row.get('metatags_score', 0)
                                })
                
                # Fallback: Se tem contagem mas n√£o tem detalhes
                elif row.get('headings_vazios_count', 0) > 0:
                    vazios_count = row.get('headings_vazios_count', 0)
                    
                    rows.append({
                        'üîó URL': url,
                        'Tag': 'M√öLTIPLOS',
                        'Elemento_Pai': 'Contexto n√£o capturado',
                        'Contexto_Completo': f"{vazios_count} headings vazios detectados (sem contexto detalhado)",
                        'Atributos_Heading': 'diversos',
                        '‚öñÔ∏è Gravidade': 'M√âDIO',
                        'Descri√ß√£o': f"{vazios_count} headings vazios detectados",
                        'Posi√ß√£o': 0,
                        'üéØ Score_P√°gina': row.get('metatags_score', 0)
                    })
            
            # Se n√£o encontrou nenhum heading vazio
            if not rows:
                df_vazio = pd.DataFrame(columns=[
                    'üîó URL', 
                    'Tag', 
                    'Elemento_Pai',
                    'Contexto_Completo',
                    'Atributos_Heading',
                    '‚öñÔ∏è Gravidade', 
                    'Descri√ß√£o',
                    'Posi√ß√£o',
                    'üéØ Score_P√°gina'
                ])
                df_vazio.to_excel(self.writer, index=False, sheet_name="Headings_Vazios")
                print(f"‚ÑπÔ∏è Aba Headings_Vazios criada sem dados (nenhum heading vazio encontrado)")
                return df_vazio
            
            df_vazios = pd.DataFrame(rows)
            
            # Ordena por gravidade (CR√çTICO primeiro), depois por tag, depois por posi√ß√£o
            gravidade_order = {'CR√çTICO': 0, 'M√âDIO': 1}
            df_vazios['gravidade_sort'] = df_vazios['‚öñÔ∏è Gravidade'].map(gravidade_order)
            df_vazios = df_vazios.sort_values(['gravidade_sort', 'Tag', 'Posi√ß√£o'], ascending=[True, True, True])
            df_vazios = df_vazios.drop('gravidade_sort', axis=1)
            
            df_vazios.to_excel(self.writer, index=False, sheet_name="Headings_Vazios")
            
            # Log para debug
            print(f"‚úÖ Aba Headings_Vazios criada com {len(df_vazios)} entradas (incluindo contexto)")
            
            return df_vazios
            
        except Exception as e:
            print(f"‚ö†Ô∏è Erro gerando aba headings vazios: {e}")
            # Em caso de erro, cria DataFrame vazio
            df_vazio = pd.DataFrame(columns=[
                'üîó URL', 
                'Tag', 
                'Elemento_Pai',
                'Contexto_Completo',
                'Atributos_Heading',
                '‚öñÔ∏è Gravidade', 
                'Descri√ß√£o',
                'Posi√ß√£o',
                'üéØ Score_P√°gina'
            ])
            df_vazio.to_excel(self.writer, index=False, sheet_name="Headings_Vazios")
            return df_vazio